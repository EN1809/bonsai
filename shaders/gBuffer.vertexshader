layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexNormal_modelspace;
layout(location = 2) in vec3 vertexColor;
layout(location = 3) in vec2 in_TransEmiss;

out vec3 vertexP_worldspace;
out vec3 vertexN_worldspace;
out vec3 MaterialColor;
out vec2 TransEmiss;

uniform vec3 OffsetOfWorldCenterToGrid;
uniform vec3 CameraToWorld;
uniform mat4 ViewProjection;
uniform mat4 Model;

void main()
{
  MaterialColor = vertexColor;
  TransEmiss = in_TransEmiss;

  v4 ModelVertex = Model*vec4(vertexPosition_modelspace, 1);

  vertexP_worldspace = ModelVertex.xyz;
  vertexN_worldspace = vec4(vec4(vertexNormal_modelspace, 1)).xyz;

  gl_Position =  ViewProjection * ModelVertex;
  /* gl_Position =  ViewProjection * Model * vec4(vertexPosition_modelspace, 1); */
  /* gl_Position = ViewProjection * VertexP; */
}

