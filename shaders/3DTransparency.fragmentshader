
in vec3 vertexP_worldspace;
in vec3 vertexN_worldspace;
in vec4 MaterialColor;

uniform sampler2D gBufferDepthTexture;

layout (location = 0) out vec4 ColorAccumulation;
layout (location = 1) out vec4 Count;


float Far = 10000.f;
float Near = 1.f;

float Linearize(float FragDepth)
{
  float Result = (2.0 * Near) / (Far + Near - FragDepth * (Far - Near));
  return Result;
}

void main()
{
  v2 UV = gl_FragCoord.xy / V2(SCR_WIDTH, SCR_HEIGHT);
  float gBufferDepth = texture(gBufferDepthTexture, UV).r;
  float FragDepth = gl_FragCoord.z;
  if (FragDepth < gBufferDepth)
  {
    ColorAccumulation = MaterialColor;
    Count = V4(1);
  }
}
