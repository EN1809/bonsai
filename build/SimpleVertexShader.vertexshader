#version 330 core

layout(location = 0) in vec3 vertexPosition_worldspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec3 vertexNormal_worldspace;

out vec3 vertexP_worldspace;
out vec3 vertexN_worldspace;

out vec3 MaterialColor;

out vec3 lightDirection_worldspace;


uniform mat4 MVP;
uniform mat4 M;
uniform mat4 V;

uniform vec3 LightP_worldspace;

void main()
{
  MaterialColor = vertexColor;

  vertexP_worldspace = vertexPosition_worldspace;
  vertexN_worldspace = vertexNormal_worldspace - vertexPosition_worldspace ;

  lightDirection_worldspace = LightP_worldspace - vertexPosition_worldspace;

  // Output position of the vertex, in clip space : MVP * position
  gl_Position = MVP * vec4(vertexPosition_worldspace, 1);
}

