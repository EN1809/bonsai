* 1.2.0

- Remove dead turn_based2, graveyard and asset_picker examples

- Add HoodooTerrain to terrain_gen

- Add ser/des for counted_string

- Fix entity models not being rotated correctly

This was happening because entity models were not centered about zero, so when
rotations were applied they were rotating about their root point (lower-left corner)
The fix was to center models about zero.

- Change CameraGhost

Game code no longer has to manage allocating and hooking up a CameraGhost
entity on the engine resources.  Instead, if wanted, it may allocate and set
the EntityBehaviorFlags_CameraGhost flag on an entity of the games choice.

- Change Entity struct

* Add 'u64 Version'
* Remove model pointer in favor of using an asset_id

This is a breaking change that better positions us to not making breaking
changes in the future.  I added a Verson field to entity, which I expect
should be well more than enough versions.  The plan here is to add a poof
feature that computes a hash of the types contents and checks that against
the hash of the currently compiled type.  We should also be able to lean
on the C type checker once that's done to generate functions that have that
hash in the name such that we actually know at compile time if we break entity
loading.




* 1.1.1

- Update terrain_gen example to have a menu to select the type of terrain

- Add HardResetWorld, which resets the world to a clean state for re-init

- Fix bug when switching from eyedropper with an incomplete selection


* 1.1.0

- Accelerate n^2 entity collision

Entity collision detection has, before now, just done the naieve n-squared thing
of checking every entity against every other entity.  This worked fine for
small demos, but as I push further into the relm of 'real games' I needed to
do entity collision on every step of the movement update (after moving every voxel), 
which was not going to go well.  Thus, it was time to fix the problem.

The solution I went with, which I've been considering for a while, is to store
a list of entities in each chunk.  When the entity moves, it first is removed
from all chunks it currently overlaps, moved, and then added to chunks it
finally overlaps.  This means we can now collide against entities occuring in
the local chunks we're overlapping, which is more acceptable than all entities
all the time.

- Fix two bugs related to high-speed entities colliding against the world

- Fix some bugs in block_array and add test cases

- Fix Camera ghost updating when UI has focus

- Fix UI not capturing input when painting

- Fix bug in .vox palette loading (indexes are 1-based!!)

- Added some screenshots
